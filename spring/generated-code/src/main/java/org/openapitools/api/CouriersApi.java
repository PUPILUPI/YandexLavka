/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.5.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.CourierDto;
import org.openapitools.model.CreateCourierRequest;
import org.openapitools.model.CreateCouriersResponse;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.model.GetCourierMetaInfoResponse;
import org.openapitools.model.GetCouriersResponse;
import java.time.LocalDate;
import org.openapitools.model.OrderAssignResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-05-06T14:41:42.473217200+03:00[Europe/Moscow]")
@Validated
@Tag(name = "courier-controller", description = "the courier-controller API")
public interface CouriersApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /couriers/assignments : Список распределенных заказов
     *
     * @param date Дата распределения заказов. Если не указана, то используется текущий день (optional)
     * @param courierId Идентификатор курьера для получения списка распредленных заказов. Если не указан, возвращаются данные по всем курьерам. (optional)
     * @return ok (status code 200)
     *         or bad request (status code 400)
     */
    @Operation(
        operationId = "couriersAssignments",
        summary = "Список распределенных заказов",
        tags = { "courier-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "ok", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrderAssignResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "bad request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Object.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/couriers/assignments",
        produces = { "application/json" }
    )
    default ResponseEntity<OrderAssignResponse> couriersAssignments(
        @Parameter(name = "date", description = "Дата распределения заказов. Если не указана, то используется текущий день", in = ParameterIn.QUERY) @Valid @RequestParam(value = "date", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate date,
        @Parameter(name = "courier_id", description = "Идентификатор курьера для получения списка распредленных заказов. Если не указан, возвращаются данные по всем курьерам.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "courier_id", required = false) Integer courierId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"date\" : \"2000-01-23\", \"couriers\" : [ { \"courier_id\" : 0, \"orders\" : [ { \"group_order_id\" : 6, \"orders\" : [ { \"regions\" : 1, \"cost\" : 5, \"completed_time\" : \"2000-01-23T04:56:07.000+00:00\", \"weight\" : 6.0274563, \"delivery_hours\" : [ \"delivery_hours\", \"delivery_hours\" ], \"order_id\" : 0 }, { \"regions\" : 1, \"cost\" : 5, \"completed_time\" : \"2000-01-23T04:56:07.000+00:00\", \"weight\" : 6.0274563, \"delivery_hours\" : [ \"delivery_hours\", \"delivery_hours\" ], \"order_id\" : 0 } ] }, { \"group_order_id\" : 6, \"orders\" : [ { \"regions\" : 1, \"cost\" : 5, \"completed_time\" : \"2000-01-23T04:56:07.000+00:00\", \"weight\" : 6.0274563, \"delivery_hours\" : [ \"delivery_hours\", \"delivery_hours\" ], \"order_id\" : 0 }, { \"regions\" : 1, \"cost\" : 5, \"completed_time\" : \"2000-01-23T04:56:07.000+00:00\", \"weight\" : 6.0274563, \"delivery_hours\" : [ \"delivery_hours\", \"delivery_hours\" ], \"order_id\" : 0 } ] } ] }, { \"courier_id\" : 0, \"orders\" : [ { \"group_order_id\" : 6, \"orders\" : [ { \"regions\" : 1, \"cost\" : 5, \"completed_time\" : \"2000-01-23T04:56:07.000+00:00\", \"weight\" : 6.0274563, \"delivery_hours\" : [ \"delivery_hours\", \"delivery_hours\" ], \"order_id\" : 0 }, { \"regions\" : 1, \"cost\" : 5, \"completed_time\" : \"2000-01-23T04:56:07.000+00:00\", \"weight\" : 6.0274563, \"delivery_hours\" : [ \"delivery_hours\", \"delivery_hours\" ], \"order_id\" : 0 } ] }, { \"group_order_id\" : 6, \"orders\" : [ { \"regions\" : 1, \"cost\" : 5, \"completed_time\" : \"2000-01-23T04:56:07.000+00:00\", \"weight\" : 6.0274563, \"delivery_hours\" : [ \"delivery_hours\", \"delivery_hours\" ], \"order_id\" : 0 }, { \"regions\" : 1, \"cost\" : 5, \"completed_time\" : \"2000-01-23T04:56:07.000+00:00\", \"weight\" : 6.0274563, \"delivery_hours\" : [ \"delivery_hours\", \"delivery_hours\" ], \"order_id\" : 0 } ] } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /couriers
     *
     * @param createCourierRequest  (required)
     * @return ok (status code 200)
     *         or bad request (status code 400)
     */
    @Operation(
        operationId = "createCourier",
        tags = { "courier-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "ok", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreateCouriersResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "bad request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Object.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/couriers",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<CreateCouriersResponse> createCourier(
        @Parameter(name = "CreateCourierRequest", description = "", required = true) @Valid @RequestBody CreateCourierRequest createCourierRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"couriers\" : [ { \"regions\" : [ 6, 6 ], \"working_hours\" : [ \"working_hours\", \"working_hours\" ], \"courier_id\" : 0, \"courier_type\" : \"FOOT\" }, { \"regions\" : [ 6, 6 ], \"working_hours\" : [ \"working_hours\", \"working_hours\" ], \"courier_id\" : 0, \"courier_type\" : \"FOOT\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /couriers/{courier_id}
     *
     * @param courierId Courier identifier (required)
     * @return ok (status code 200)
     *         or bad request (status code 400)
     *         or not found (status code 404)
     */
    @Operation(
        operationId = "getCourierById",
        tags = { "courier-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "ok", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CourierDto.class))
            }),
            @ApiResponse(responseCode = "400", description = "bad request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Object.class))
            }),
            @ApiResponse(responseCode = "404", description = "not found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Object.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/couriers/{courier_id}",
        produces = { "application/json" }
    )
    default ResponseEntity<CourierDto> getCourierById(
        @Parameter(name = "courier_id", description = "Courier identifier", required = true, in = ParameterIn.PATH) @PathVariable("courier_id") Long courierId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"regions\" : [ 6, 6 ], \"working_hours\" : [ \"working_hours\", \"working_hours\" ], \"courier_id\" : 0, \"courier_type\" : \"FOOT\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /couriers/meta-info/{courier_id}
     *
     * @param courierId Courier identifier (required)
     * @param startDate Rating calculation start date (required)
     * @param endDate Rating calculation end date (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getCourierMetaInfo",
        tags = { "courier-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = GetCourierMetaInfoResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/couriers/meta-info/{courier_id}",
        produces = { "application/json" }
    )
    default ResponseEntity<GetCourierMetaInfoResponse> getCourierMetaInfo(
        @Parameter(name = "courier_id", description = "Courier identifier", required = true, in = ParameterIn.PATH) @PathVariable("courier_id") Long courierId,
        @NotNull @Parameter(name = "startDate", description = "Rating calculation start date", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "startDate", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "endDate", description = "Rating calculation end date", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "endDate", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"earnings\" : 5, \"regions\" : [ 6, 6 ], \"working_hours\" : [ \"working_hours\", \"working_hours\" ], \"rating\" : 1, \"courier_id\" : 0, \"courier_type\" : \"FOOT\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /couriers
     *
     * @param limit Максимальное количество курьеров в выдаче. Если параметр не передан, то значение по умолчанию равно 1. (optional)
     * @param offset Количество курьеров, которое нужно пропустить для отображения текущей страницы. Если параметр не передан, то значение по умолчанию равно 0. (optional)
     * @return ok (status code 200)
     *         or bad request (status code 400)
     */
    @Operation(
        operationId = "getCouriers",
        tags = { "courier-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "ok", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = GetCouriersResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "bad request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Object.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/couriers",
        produces = { "application/json" }
    )
    default ResponseEntity<GetCouriersResponse> getCouriers(
        @Parameter(name = "limit", description = "Максимальное количество курьеров в выдаче. Если параметр не передан, то значение по умолчанию равно 1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false) Integer limit,
        @Parameter(name = "offset", description = "Количество курьеров, которое нужно пропустить для отображения текущей страницы. Если параметр не передан, то значение по умолчанию равно 0.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "offset", required = false) Integer offset
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"couriers\" : [ { \"regions\" : [ 6, 6 ], \"working_hours\" : [ \"working_hours\", \"working_hours\" ], \"courier_id\" : 0, \"courier_type\" : \"FOOT\" }, { \"regions\" : [ 6, 6 ], \"working_hours\" : [ \"working_hours\", \"working_hours\" ], \"courier_id\" : 0, \"courier_type\" : \"FOOT\" } ], \"offset\" : 5, \"limit\" : 1 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
